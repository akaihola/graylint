---
name: "Graylint"
description: "Run linters and show only messages changed since a past revision."
author: "Antti Kaihola and contributors to Graylint"
inputs:
  options:
    description: >-
      Options passed to Graylint. Use `graylint --help` to see available options.
      Default: '--color'
    required: false
    default: "--color"
  src:
    description: "Source tree paths to run the linters on. Default: '.'"
    required: false
    default: "."
  version:
    description: 'Version of Graylint to use, e.g. "~=1.0.0", "1.0.0", "@main"'
    required: false
    default: "@main"
  revision:
    description: >-
      Git revision range to compare when determining modified lines.
      Determined automatically if omitted.
    required: false
  lint:
    description: >-
      Comma-separated list of linters to `pip install` and run from Graylint.
      Optionally, version constraints (using pip syntax) can be specified.
      Example: flake8,pylint==2.13.1
    required: false
    default: ''
  extra_packages:
    description: >-
      Extra Python packages to `pip install` before running Graylint. Useful
      for installing the tested package itself (e.g. `-e .[test]`), linter
      plugins (e.g. `flake8-bugbear`), or imports followed by Mypy (e.g.
      `types-requests`). This string is passed to `pip install` as-is.
branding:
  color: "black"
  icon: "check-circle"
runs:
  using: composite
  steps:
    - name: Commit Range
      id: commit-range
      uses: akaihola/darker/.github/actions/commit-range@1.7.0
    - name: Run Graylint
      run: |
        # Exists since using github.action_path + path to main script doesn't
        # work because bash interprets the backslashes in github.action_path
        # (which are used when the runner OS is Windows) destroying the path to
        # the target file.
        #
        # Also semicolons are necessary because I can't get the newlines to work
        entrypoint="import sys;
        import subprocess;
        from pathlib import Path;

        MAIN_SCRIPT = Path(r'${{ github.action_path }}') / 'action' / 'main.py';

        proc = subprocess.run([sys.executable, str(MAIN_SCRIPT)]);
        sys.exit(proc.returncode)
        "

        if [ "$RUNNER_OS" == "Windows" ]; then
          echo $entrypoint | python
        else
          echo $entrypoint | python3
        fi
      env:
        # TODO: Remove once https://github.com/actions/runner/issues/665 is
        #       fixed.
        INPUT_OPTIONS: ${{ inputs.options }}
        INPUT_SRC: ${{ inputs.src }}
        INPUT_VERSION: ${{ inputs.version }}
        INPUT_REVISION: ${{ inputs.revision }}
        INPUT_LINT: ${{ inputs.lint }}
        INPUT_EXTRA_PACKAGES: ${{ inputs.extra_packages }}
        INPUT_COMMIT_RANGE: ${{ steps.commit-range.outputs.commit-range }}
        pythonioencoding: utf-8
      shell: bash

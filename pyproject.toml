[build-system]
# Minimum requirements for the build system to execute.
requires = ["setuptools", "wheel"]  # PEP 508 specifications.

[project]
name = "graylint"
authors = [{name = "Antti Kaihola", email = "13725+akaihola@users.noreply.github.com"}]
license = {text = "BSD"}
description = "Run linters and show only new errors compared to an older commit"
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9"
dependencies = [
    "darkgraylib>=2.3.0,<3.0.dev0",
]
# NOTE: remember to keep `.github/workflows/python-package.yml` in sync
#       with the minimum required Python version
dynamic = ["readme", "version"]

[tool.setuptools.dynamic]
version = {attr = "graylint.version.__version__"}

[project.optional-dependencies]
color = [
    "Pygments>=2.4.0",
]
release = [
    "darkgray-dev-tools~=0.2.0",
]
test = [
    "click>=8.0.0",
    "cryptography>=3.3.2",  # through twine, fixes CVE-2020-36242
    "defusedxml>=0.7.1",
    "mypy>=1.11.0",
    "pathspec>=0.2.2",  # to test `gen_python_files` in `test_black_diff.py`
    "pip-requirements-parser>=32.0.0",
    "pydocstyle>=1.0.0",
    "Pygments>=2.4.0",
    "pylint>=3.0.0",
    "pylint-per-file-ignores>=1.3.2",
    "pytest>=6.2.4",
    "pytest-kwparametrize>=0.0.3",
    "requests_cache>=0.7",
    "ruamel.yaml>=0.17.21",
    "ruff>=0.2.0",
    "twine>=2.0.0,!=6.1.0",  # see https://github.com/pypa/twine/issues/1216
    "types-requests>=2.27.9",
    "types-toml>=0.10.4",
    "urllib3>=1.25.9",  # through requests-cache and twine, fixes CVE-2020-26137
    "wheel>=0.21.0",
]

[project.urls]
Homepage = "https://github.com/akaihola/graylint"
"Source Code" = "https://github.com/akaihola/graylint"
"Change Log" = "https://github.com/akaihola/graylint/blob/master/CHANGES.rst"
News = "https://github.com/akaihola/graylint/discussions/categories/announcements"

[project.scripts]
graylint = "graylint.__main__:main_with_error_handling"

# plugin entry points:
[project.entry-points."graylint.output_format"]
gnu = "graylint.output.gnu:GnuErrorFormatOutputPlugin"
github = "graylint.output.github:GitHubOutputPlugin"

[tool.setuptools]
packages = ["graylint", "graylint.output", "graylint.tests"]
package-dir = {"" = "src"}
py-modules = []
license-files = ["LICENSE.rst"]

[tool.black]
# Darker makes Black read its configuration from the file indicated by the `--config`
# option, so we need to mirror the same configuration here and in `check-graylint.toml`.
skip-string-normalization = false
target-version = ["py39", "py310", "py311", "py312"]

[tool.isort]
# Darker makes isort read its configuration from the file indicated by the `--config`
# option, so we need to mirror the same configuration here and in `check-graylint.toml`.
profile = "black"
known_first_party = ["darkgraylib", "graylint"]
known_third_party = ["pytest"]

[tool.darker]
src = [
    "action",
    "release_tools",
    "src",
    "setup.py",
]
revision = "origin/main..."
isort = true

[tool.pylint.MASTER]
load-plugins = [
    "pylint_per_file_ignores",
]

[tool.pylint."messages control"]
# Check import order only with isort. Pylint doesn't support a custom list of first
# party packages. We want to consider "darkgraylib" and "graylint" as first party.
disable = ["wrong-import-order"]
per-file-ignores = [
  """/src/graylint/tests/:\
     use-dict-literal,\
     too-many-arguments,\
     too-many-positional-arguments""",
]

[tool.ruff]
target-version = "py39"
output-format = "concise"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812",  # Trailing comma missing
    "D203",  # One blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
    "D400",  # First line should end with a period (duplicates D415)
]

[tool.ruff.lint.per-file-ignores]
"src/graylint/tests/*.py" = [
    "ANN001",  # Missing type annotation for function argument
    "ANN201",  # Missing return type annotation for public function
    "ANN204",  # Missing return type annotation for special method `__init__`
    "INP001",  # File is part of an implicit namespace package
    "C408",  # Unnecessary `dict` call (rewrite as a literal)
    "PLR0913",  # Too many arguments in function definition
    "S101",  # Use of `assert` detected
    "SLF001",  # Private member accessed
]

[tool.ruff.lint.isort]
known-first-party = ["darkgraylib", "graylint"]
known-third-party = ["pytest"]
